/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/apis/android.limbar.io/v1alpha1/organizations/{organizationId}/instances": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Android instances in the region */
        get: operations["listAndroidInstances"];
        /** Create an Android instance */
        put: operations["putAndroidInstance"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/apis/android.limbar.io/v1alpha1/organizations/{organizationId}/instances/{instanceName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Android instance with given name */
        get: operations["getAndroidInstance"];
        put?: never;
        post?: never;
        /** Delete Android instance with given name */
        delete: operations["deleteAndroidInstance"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/livez": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Check if the server is alive */
        get: operations["checkAlive"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/readyz": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Check if the server is ready */
        get: operations["checkReady"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        AndroidInstance: {
            metadata: {
                name: string;
                organizationId: string;
                /** Format: date-time */
                createdAt?: string;
                /** Format: date-time */
                terminatedAt?: string;
            };
            spec?: {
                /** @default Android */
                os: string;
                selector?: {
                    [key: string]: string;
                };
            };
            status?: {
                state: components["schemas"]["AndroidInstanceState"];
                connectionUrl?: string;
                webrtcUrl?: string;
            };
        };
        AndroidInstanceWithToken: {
            metadata: {
                name: string;
                organizationId: string;
                /** Format: date-time */
                createdAt?: string;
                /** Format: date-time */
                terminatedAt?: string;
            };
            token: string;
            status: {
                state: components["schemas"]["AndroidInstanceState"];
                connectionUrl?: string;
                webrtcUrl?: string;
            };
        };
        /** @enum {string} */
        AndroidInstanceState: "unknown" | "creating" | "ready" | "terminated";
        Status: {
            status: string;
            message: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listAndroidInstances: {
        parameters: {
            query?: {
                /** @description State filter to apply to Android instances to return. */
                state?: components["schemas"]["AndroidInstanceState"];
            };
            header?: never;
            path: {
                /** @description Organization ID the Android instances belong to. */
                organizationId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AndroidInstance"][];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
        };
    };
    putAndroidInstance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Organization ID the Android instances belong to. */
                organizationId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    instance: components["schemas"]["AndroidInstance"];
                    /** @description Return only after the instance is ready to connect. */
                    wait?: boolean;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AndroidInstanceWithToken"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Bad request */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
        };
    };
    getAndroidInstance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Organization ID the Android instances belong to. */
                organizationId: string;
                /** @description Android instance name */
                instanceName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AndroidInstance"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad request */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
        };
    };
    deleteAndroidInstance: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Organization ID the Android instances belong to. */
                organizationId: string;
                /** @description Android instance name */
                instanceName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Bad request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description NotFound */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
            /** @description Internal server error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Status"];
                };
            };
        };
    };
    checkAlive: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    checkReady: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
